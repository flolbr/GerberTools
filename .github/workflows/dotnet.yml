# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Windows Build

on:
  push:
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-2019

    steps:      
    - uses: actions/checkout@v3

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      # with:
      #   vs-version: 16.0
    
    - name: Setup NuGet.exe for use with actions
      uses: NuGet/setup-nuget@v1.2.0

    - name: Restore dependencies
      run: nuget restore GerberProjects/GerberProjects.sln

    - name: Build Solution
      run: msbuild GerberProjects/GerberProjects.sln /t:Build /p:Configuration=Release

    - name: Upload Build
      # if: startsWith(github.ref, 'refs/tags/') == false
      uses: actions/upload-artifact@v3
      with:
        name: GerberTools-${{ github.sha }}
        path: ./Build/

    # - name: Release
    #   if: startsWith(github.ref, 'refs/tags/')
    #   uses: softprops/action-gh-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     name: GerberTools-${{ steps.get_version.outputs.version }}
    #     files: Build/*

  release:
    name: Release
    needs: build
    runs-on: windows-2019
    # if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Extract Release Version
        id: get_version
        shell: bash
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      - uses: actions/download-artifact@v3
        with:
          name: artifact # otherwise, it will download all artifacts, creating a subdirectory for each artifact.
          path: ./Build/
      # - id: major_version
      #   run: >
      #     echo major_version=$(
      #       echo ${{ github.ref }} | cut -d'v' -f2 | cut -d'.' -f1
      #     ) >> $GITHUB_OUTPUT
      # - id: is_release_candidate
      #   run: >
      #     echo is_release_candidate=$(
      #       echo ${{ github.ref }} | grep -c 'rc'
      #     ) >> $GITHUB_OUTPUT
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          generate_release_notes: true
          name: GerberTools-${{ steps.get_version.outputs.version }}
          files: Build/*
